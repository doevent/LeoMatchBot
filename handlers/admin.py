import buttons
from create_bot import dp, bot
from aiogram import types, Dispatcher
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import State, StatesGroup
from work_with_db import db
from aiogram.dispatcher.filters import Text

class AdminStates(StatesGroup):
    admin_menu = State()

    first_change = State()

    mailing_to_subscribers = State()
    mailing_change = State()
    mailing_to_all_subscribers = State()
    change_specific_subscribers = State()
    mailing_to_specific_subscribers = State()

    settings = State()
    settings_change = State()

    analytics = State()



'''*** –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ***'''
'''******************************************************************************************************************'''
async def admin_menu_handler(message: types.Message):
    await admin_menu_module(message)

async def admin_menu_module(msg):
    await AdminStates.first_change.set()
    await msg.answer('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=buttons.start_admin_menu)

async def first_change_handler(message: types.Message):
    if message.text == 'üì£ –°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º':
        await AdminStates.mailing_to_subscribers.set()
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞—Å—Å—ã–ª–∫—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:', reply_markup=buttons.mailing_admin_menu)
    elif message.text == '‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏':
        await AdminStates.settings.set()
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:', reply_markup=buttons.settings_admin_menu)
    elif message.text == 'üóÇ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞':
        await AdminStates.analytics.set()
        await analytics(message)
    elif message.text == 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Ä–µ–∂–∏–º–∞':
        await message.answer('–í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞...')
    else:
        await message.answer('–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞!')
'''******************************************************************************************************************'''

'''*** –ú–µ–Ω—é –≤—ã–±–æ—Ä —Ç–∏–ø–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ ***'''
'''******************************************************************************************************************'''
async def mailing_to_subscribers_handler(message: types.Message):
    if message.text == 'üîî –û–±—ã—á–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞':
        await AdminStates.mailing_to_all_subscribers.set()
        await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–∞–∑–æ—Å–ª–∞—Ç—å:', reply_markup=buttons.cancel_reply)
    elif message.text == 'üë• –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º':
        await AdminStates.change_specific_subscribers.set()
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º—É –Ω–∞–¥–æ —Ä–∞–∑–æ—Å–ª–∞—Ç—å:', reply_markup=buttons.mailing_specific)
    elif message.text == 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞':
        await admin_menu_module(message)
    else:
        await message.answer('–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞!')

# –†–∞—Å—Å—ã–ª–∫–∞ –ø–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
async def mailing_to_all_subscribers_handler(message: types.Message):
    if message.text == '–û—Ç–º–µ–Ω–∞':
        await AdminStates.mailing_to_subscribers.set()
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞—Å—Å—ã–ª–∫—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:',
                             reply_markup=buttons.mailing_admin_menu)
    else:
        all_id = db.get_all_users_id()
        for i in range(len(all_id)):
            try:
                await bot.send_message(chat_id=all_id[i], text=message.text)
            except:
                pass

        await AdminStates.mailing_to_subscribers.set()
        await message.answer('–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞—Å—Å—ã–ª–∫—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:', reply_markup=buttons.mailing_admin_menu)

# –í—ã–±–æ—Ä –ø–∞—Ä–∞–º–µ—Ç—Ä–∞, –∏—Å—Ö–æ–¥—è –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
async def change_specific_subscribers_handler(message: types.Message):
    if message.text == '–î–µ–≤—É—à–∫–∞–º':
        db.set_data_in_table('mailing_to', '–Ø –¥–µ–≤—É—à–∫–∞', message.from_user.id, 'admins')
        await AdminStates.mailing_to_specific_subscribers.set()
        await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–∞–∑–æ—Å–ª–∞—Ç—å:')
    elif message.text == '–ü–∞—Ä–Ω—è–º':
        db.set_data_in_table('mailing_to', '–Ø –ø–∞—Ä–µ–Ω—å', message.from_user.id, 'admins')
        await AdminStates.mailing_to_specific_subscribers.set()
        await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–∞–∑–æ—Å–ª–∞—Ç—å:', reply_markup=buttons.cancel_reply)
    elif message.text == '–û—Ç–º–µ–Ω–∞':
        await AdminStates.mailing_to_subscribers.set()
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞—Å—Å—ã–ª–∫—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:',
                             reply_markup=buttons.mailing_admin_menu)

    else:
        await message.answer('–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞!')

# –†–∞—Å—Å—ã–ª–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
async def mailing_to_specific_subscribers_handler(message: types.Message):
    if message.text == '–û—Ç–º–µ–Ω–∞':
        await AdminStates.mailing_to_subscribers.set()
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞—Å—Å—ã–ª–∫—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:',
                             reply_markup=buttons.mailing_admin_menu)
    else:
        all_specifics_id = db.get_all_specific_users_id(db.get_data_from_admins_table('mailing_to', message.from_user.id))
        for i in range(len(all_specifics_id)):
            try:
                await bot.send_message(chat_id=all_specifics_id[i], text=message.text)
            except:
                pass

        await AdminStates.mailing_to_subscribers.set()
        await message.answer('–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞—Å—Å—ã–ª–∫—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:', reply_markup=buttons.mailing_admin_menu)
'''******************************************************************************************************************'''

'''*** –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ***'''
'''******************************************************************************************************************'''
async def settings_handler(message: types.Message):
    if message.text == '–ü—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å':
        pass
    if message.text == '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å':
        pass
    if message.text == '–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è':
        pass
    if message.text == '–ù–∞–∑–∞–¥':
        pass
'''******************************************************************************************************************'''

'''*** –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–ª–æ–∫ "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞" ***'''
'''******************************************************************************************************************'''
async def analytics(msg):
    users_counter = 0
    active_users_counter = 0

    all_id = db.get_all_users_id()
    for i in range(len(all_id)):
        try:
            if db.is_exist_user_in_db(all_id[i], 'admins') == False:
                msg_from_bot = await bot.send_message(chat_id=all_id[i], text='üëã')
                await msg_from_bot.delete()
                active_users_counter = active_users_counter + 1
                users_counter = users_counter + 1
        except:
            users_counter = users_counter + 1

    await msg.answer(f'–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {active_users_counter}\n'
                     f'–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_counter}', reply_markup=buttons.inline_markup_excel)

async def is_output_excel(callback: types.CallbackQuery):
    await callback.message.edit_reply_markup()
    await callback.message.answer_document(open('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞.xlsx', 'rb'))
'''******************************************************************************************************************'''

# –§—É–Ω–∫—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤ —Ñ–∞–π–ª–∞ "admins.py"
def reg_handlers_questionnaire(dp: Dispatcher):
    dp.register_message_handler(first_change_handler, state=AdminStates.first_change)

    dp.register_message_handler(mailing_to_subscribers_handler, state=AdminStates.mailing_to_subscribers)
    dp.register_message_handler(mailing_to_all_subscribers_handler, state=AdminStates.mailing_to_all_subscribers)
    dp.register_message_handler(change_specific_subscribers_handler, state=AdminStates.change_specific_subscribers)
    dp.register_message_handler(mailing_to_specific_subscribers_handler, state=AdminStates.mailing_to_specific_subscribers)

    dp.register_message_handler(settings_handler, state=AdminStates.settings)

    dp.register_callback_query_handler(is_output_excel, Text('output_excel'), state=AdminStates.analytics)
